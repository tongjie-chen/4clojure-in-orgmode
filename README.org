* Parser
This part downloads the json file.
#+begin_src sh 
cd /tmp
wget https://raw.githubusercontent.com/oxalorg/4ever-clojure/main/public/data/problems.json
#+end_src    

Open the json file and change "let's" to "let us" and "you'd" to "you would" so ~html-to-markdown-string~ will not run to errors.

This parses json file and then outputs to a file in /tmp folder.
#+begin_src emacs-lisp
  (with-temp-buffer
  (find-file "/tmp/problems.json")
  (replace-string "let's" "let us")
  (replace-string "you'd" "you would")
  (let ((temp-4clojure (json-parse-buffer :object-type 'alist :array-type 'array)))
    (with-temp-file "/tmp/4clojure.org"
      (dotimes (i (length temp-4clojure))
	(let ((item (aref temp-4clojure i)))
	(insert "\n* ")
	(condition-case nil (insert (format "%d" (cdr (assoc '_id item))) ". ") (error nil))
	(insert (cdr (assoc 'title item)) "\n")
	(insert (html-to-markdown-string (cdr (assoc 'description item))) "\n")
	(insert "#+begin_src clojure\n")
	(insert "(def __ )\n")
	(let ((tests (cdr (assoc 'tests item))))
	  (dotimes (j (length tests))
	    (insert (aref tests j) "\n"))
	  )
	(insert "#+end_src")
	)
      )
    (beginning-of-buffer)
    (replace-string "" "")
    )))
#+end_src

* How to use
Following the method described by Sacha Chua, https://sachachua.com/blog/2014/05/playing-around-clojure-cider-4clojure/, you will just need to change the result to be defined after "__". You babel execution should return all true.

#+begin_src clojure 
(defn __ [x] (= (seq x) (reverse x)))
(list
  (false? (__ '(1 2 3 4 5)))
  (true? (__ "racecar"))
  (true? (__ [:foo :bar :foo]))
  (true? (__ '(1 1 3 3 1 1)))
  (false? (__ '(:a :b :c))))
#+end_src
